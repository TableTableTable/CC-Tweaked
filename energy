-- rftools_power_reader.lua
-- Reads energy levels from an RFToolsPower Dimensional Cell
-- and prints the results to the computer.

-- Debug: list all connected peripherals
print("=== Connected Peripherals ===")
for _, name in ipairs(peripheral.getNames()) do
  print("- " .. name .. " (" .. peripheral.getType(name) .. ")")
end
print("=============================")

-- Try to locate the Dimensional Cell explicitly
local cell
for _, name in ipairs(peripheral.getNames()) do
  local pType = peripheral.getType(name)
  if pType:find("rftools") or pType:find("cell") or pType:find("power") then
    cell = peripheral.wrap(name)
    print("Found potential Dimensional Cell on: " .. name .. " [" .. pType .. "]")
    break
  end
end

if not cell then
  print("No Dimensional Cell peripheral detected! Make sure a modem is attached to the block.")
  return
end

-- Helper: extract number from either plain number or table response
local function extractEnergy(val)
  if type(val) == "number" then
    return val
  elseif type(val) == "table" then
    return val.energy or val.stored or val[1] or 0
  end
  return 0
end

local function extractCapacity(val)
  if type(val) == "number" then
    return val
  elseif type(val) == "table" then
    return val.capacity or val.max or val[2] or 0
  end
  return 0
end

-- Try to get stored energy and capacity
local stored = 0
local capacity = 0

if cell.getEnergy then
  stored = extractEnergy(cell.getEnergy())
elseif cell.getEnergyStored then
  stored = extractEnergy(cell.getEnergyStored())
else
  print("Could not find an energy method on the Dimensional Cell.")
  return
end

if cell.getMaxEnergyStored then
  capacity = extractCapacity(cell.getMaxEnergyStored())
elseif cell.getEnergyCapacity then
  capacity = extractCapacity(cell.getEnergyCapacity())
end

-- Print results
print("=== RFTools Dimensional Cell ===")
print("Energy Stored: " .. tostring(stored) .. " RF")
if capacity > 0 then
  print("Capacity: " .. tostring(capacity) .. " RF")
  local percent = math.floor((stored / capacity) * 100)
  print("Usage: " .. percent .. "%")
end
